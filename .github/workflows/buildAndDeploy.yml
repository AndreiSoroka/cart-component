name: "Build & Deploy"

on:
  push:
    branches:
      - master
      - build-debugger
  workflow_dispatch: { }

jobs:
  build_deploy:
    name: Build and Deploy
    concurrency:
      group: deploy
      cancel-in-progress: false
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps

      - name: ðŸ›  Build
        id: build
        run: yarn build

      - name: Save Test-Screenshots from CI
        uses: actions/upload-artifact@v3
        if: failure() && steps.build.outcome != 'success'
        with:
          name: screenshots
          path: ./tests/e2e/

      - name: ðŸ“‚ Deploy
        if: github.ref == 'refs/heads/master'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/

  cdn:
    name: CDN
    runs-on: ubuntu-22.04
    needs:
      - build_deploy
    steps:
      - name: ðŸ—‘ Pure Cloudflare cache
        if: github.ref == 'refs/heads/master'
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURE_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}';

